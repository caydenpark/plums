generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  first_name    String    
  last_name     String
  username      String    @unique
  email         String    @unique
  password_hash String // Hashed password would be ideal, consider using bcrypt
  date_added    DateTime  @default(now())
  date_updated  DateTime  @updatedAt
  sessions      Session[]
  topics        Topic[]   @relation("UserTopics")
}

model Session {
  id      Int  @id @default(autoincrement())
  user_id Int
  user    User @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
}

model Topic {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  date_added   DateTime      @default(now())
  date_updated DateTime      @updatedAt
  parent_id    Int?
  attachments  Attachment[]
  images       Image[]
  links        Link[]
  notes        Note[]
  parent       Topic?        @relation("Subtopics", fields: [parent_id], references: [id])
  subtopics    Topic[]       @relation("Subtopics")
  TopicLabels  TopicLabels[]
  labels       Label[]       @relation("TopicLabels")
  user         User          @relation("UserTopics", fields: [user_id], references: [id])
  user_id      Int           
}

model Image {
  id           Int      @id @default(autoincrement())
  topic_id     Int
  name         String
  url          String
  date_added   DateTime @default(now())
  date_updated DateTime @updatedAt
  type         ImgType
  topic        Topic    @relation(fields: [topic_id], references: [id])

  @@index([topic_id])
}

model Note {
  id           Int      @id @default(autoincrement())
  topic_id     Int
  title        String
  content      String
  date_added   DateTime @default(now())
  date_updated DateTime @updatedAt
  topic        Topic    @relation(fields: [topic_id], references: [id])

  @@index([topic_id])
}

model Link {
  id           Int      @id @default(autoincrement())
  topic_id     Int
  title        String
  url          String
  description  String
  date_added   DateTime @default(now())
  date_updated DateTime @updatedAt
  topic        Topic    @relation(fields: [topic_id], references: [id])

  @@index([topic_id])
}

model Attachment {
  id           Int      @id @default(autoincrement())
  topic_id     Int
  name         String
  content      Bytes // This is binary data
  date_added   DateTime @default(now())
  date_updated DateTime @updatedAt
  type         FileType
  topic        Topic    @relation(fields: [topic_id], references: [id])

  @@index([topic_id])
}

model Label {
  id           Int           @id @default(autoincrement())
  name         String        @unique
  date_added   DateTime      @default(now())
  date_updated DateTime      @updatedAt
  TopicLabels  TopicLabels[]
  topics       Topic[]       @relation("TopicLabels")
}

model TopicLabels {
  topic_id Int
  label_id Int
  label    Label @relation(fields: [label_id], references: [id], onDelete: Cascade)
  topic    Topic @relation(fields: [topic_id], references: [id], onDelete: Cascade)

  @@id([topic_id, label_id])
}

enum ImgType {
  JPEG
  JPG
  PNG
  HEIC
}

enum FileType {
  DOCX
  PDF
  XLSX
  PPTX
  MP3
  ZIP
  TXT
  JSON
}
